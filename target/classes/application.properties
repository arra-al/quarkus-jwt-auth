# Configuration file
# key = value

# configure your datasource
quarkus.datasource.url = jdbc:postgresql://localhost:5432/arra-test-itsvil
quarkus.datasource.driver = org.postgresql.Driver
quarkus.datasource.username = postgres
quarkus.datasource.password = 1234

# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation = drop-and-create
quarkus.hibernate-orm.log.sql = true

# quarkus.flyway.migrate-at-start=true

# configure jdbc security
quarkus.security.jdbc.enabled=true
quarkus.security.jdbc.principal-query.sql=SELECT u.password FROM arra_user u WHERE u.username=?
quarkus.security.jdbc.principal-query.clear-password-mapper.enabled=true 
quarkus.security.jdbc.principal-query.clear-password-mapper.password-index=1
quarkus.security.jdbc.principal-query.attribute-mappings.0.index=2 
quarkus.security.jdbc.principal-query.attribute-mappings.0.to=groups

# jwt security
# This token must be encoded using Base64 and be at least 256 bits long (you can type `openssl rand -base64 64` on your command line to generate a 512 bits one)
application.security.authentication.jwt.base64-secret = YjE0ODE4ODQzZDlmM2IxYTk5M2U1NWZhZDdmNDcxMWJjYzA3OGE5MzRiMDliYjQwZTI3MDdlOWVjMmI0ODBkYWYwMmI4OTc0OWVjMzM4MWQ5NzZmNzkyNDAwOWQ0ZDMzNDRiYmY0YzJhZjRiMjgxMWY2M2QxNTZiYzc4MWY2NWU=
# Token is valid 24 hours
application.security.authentication.jwt.token-validity-in-seconds: 86400
application.security.authentication.jwt.token-validity-in-seconds-for-remember-me: 2592000